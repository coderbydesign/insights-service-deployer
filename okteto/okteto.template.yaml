# Multiple development containers for different host-inventory services
dev:
  # Main Service (Nginx Proxy)
  host-inventory-service:
    image: registry.access.redhat.com/ubi9/nginx-124:latest
    command: ["nginx", "-g", "daemon off;"]
    workdir: /opt/app-root/src
    sync:
      - ${INSIGHTS_HOST_INVENTORY_REPO_PATH:-/Users/mmclaugh/go/src/github.com/RedHatInsights/insights-host-inventory}:/opt/app-root/src
    forward:
      - 8001:8080  # Main service port
    environment:
      - CLOWDER_ENABLED=true
    volumes:
      - /var/run/secrets
    securityContext:
      runAsUser: ${OKTETO_USER_ID}
      runAsGroup: ${OKTETO_GROUP_ID}
      fsGroup: ${OKTETO_FS_GROUP_ID}
      runAsNonRoot: true

  # Read-only Service  
  host-inventory-service-reads:
    image: ${OKTETO_IMAGE}:${OKTETO_TAG}
    command: 
      - "bash"
      - "-c"
      - "export HOME=/tmp && export PATH=/tmp/.local/bin:$PATH && mkdir -p /tmp/inventory/prometheus /tmp/gunicorn && pip install --user debugpy && export PYTHONPATH=$HOME/.local/lib/python3.9/site-packages:$PYTHONPATH && python -m debugpy --listen 0.0.0.0:9229 -m gunicorn --workers=1 --threads=8 --limit-request-field_size=16380 --limit-request-line=8190 --worker-tmp-dir=/tmp/gunicorn --log-file=- --access-logfile=- -c gunicorn.conf.py -b 0.0.0.0:8000 -t 60 --worker-class=uvicorn.workers.UvicornWorker --reload run:app"
    workdir: /opt/app-root/src
    sync:
      - ${INSIGHTS_HOST_INVENTORY_REPO_PATH:-/Users/mmclaugh/go/src/github.com/RedHatInsights/insights-host-inventory}:/opt/app-root/src
    forward:
      - 8002:8000  # Reads service port
      - 9002:9229  # Debug port
    environment:
      - LOG_LEVEL=DEBUG
      - SERVICE_TYPE=READS
      - CLOWDER_ENABLED=true
      - INVENTORY_API_USE_READREPLICA=true
      - PROMETHEUS_MULTIPROC_DIR=/tmp/inventory/prometheus
    volumes:
      - /var/run/secrets
    securityContext:
      runAsUser: ${OKTETO_USER_ID}
      runAsGroup: ${OKTETO_GROUP_ID}
      fsGroup: ${OKTETO_FS_GROUP_ID}
      runAsNonRoot: true

  # Secondary Read Service
  host-inventory-service-secondary-reads:
    image: ${OKTETO_IMAGE}:${OKTETO_TAG}
    command: 
      - "bash"
      - "-c"
      - "export HOME=/tmp && export PATH=/tmp/.local/bin:$PATH && mkdir -p /tmp/inventory/prometheus /tmp/gunicorn && pip install --user debugpy && export PYTHONPATH=$HOME/.local/lib/python3.9/site-packages:$PYTHONPATH && python -m debugpy --listen 0.0.0.0:9229 -m gunicorn --workers=1 --threads=8 --limit-request-field_size=16380 --limit-request-line=8190 --worker-tmp-dir=/tmp/gunicorn --log-file=- --access-logfile=- -c gunicorn.conf.py -b 0.0.0.0:8000 -t 60 --worker-class=uvicorn.workers.UvicornWorker --reload run:app"
    workdir: /opt/app-root/src
    sync:
      - ${INSIGHTS_HOST_INVENTORY_REPO_PATH:-/Users/mmclaugh/go/src/github.com/RedHatInsights/insights-host-inventory}:/opt/app-root/src
    forward:
      - 8003:8000  # Secondary reads service port
      - 9003:9229  # Debug port
    environment:
      - LOG_LEVEL=DEBUG
      - SERVICE_TYPE=SECONDARY_READS
      - CLOWDER_ENABLED=true
      - INVENTORY_API_USE_READREPLICA=true
      - PROMETHEUS_MULTIPROC_DIR=/tmp/inventory/prometheus
    volumes:
      - /var/run/secrets
    securityContext:
      runAsUser: ${OKTETO_USER_ID}
      runAsGroup: ${OKTETO_GROUP_ID}
      fsGroup: ${OKTETO_FS_GROUP_ID}
      runAsNonRoot: true

  # Write Service
  host-inventory-service-writes:
    image: ${OKTETO_IMAGE}:${OKTETO_TAG}
    command: 
      - "bash"
      - "-c"
      - "export HOME=/tmp && export PATH=/tmp/.local/bin:$PATH && mkdir -p /tmp/inventory/prometheus /tmp/gunicorn && pip install --user debugpy && export PYTHONPATH=$HOME/.local/lib/python3.9/site-packages:$PYTHONPATH && python -m debugpy --listen 0.0.0.0:9229 -m gunicorn --workers=1 --threads=8 --limit-request-field_size=16380 --limit-request-line=8190 --worker-tmp-dir=/tmp/gunicorn --log-file=- --access-logfile=- -c gunicorn.conf.py -b 0.0.0.0:8000 -t 60 --worker-class=uvicorn.workers.UvicornWorker --reload run:app"
    workdir: /opt/app-root/src
    sync:
      - ${INSIGHTS_HOST_INVENTORY_REPO_PATH:-/Users/mmclaugh/go/src/github.com/RedHatInsights/insights-host-inventory}:/opt/app-root/src
    forward:
      - 8004:8000  # Writes service port
      - 9004:9229  # Debug port
    environment:
      - LOG_LEVEL=DEBUG
      - SERVICE_TYPE=WRITES
      - CLOWDER_ENABLED=true
      - PROMETHEUS_MULTIPROC_DIR=/tmp/inventory/prometheus
    volumes:
      - /var/run/secrets
    securityContext:
      runAsUser: ${OKTETO_USER_ID}
      runAsGroup: ${OKTETO_GROUP_ID}
      fsGroup: ${OKTETO_FS_GROUP_ID}
      runAsNonRoot: true

  # Export Service
  host-inventory-export-service:
    image: ${OKTETO_IMAGE}:${OKTETO_TAG}
    command: 
      - "bash"
      - "-c"
      - "export HOME=/tmp && export PATH=/tmp/.local/bin:$PATH && mkdir -p /tmp/inventory/prometheus /tmp/gunicorn && pip install --user debugpy && export PYTHONPATH=$HOME/.local/lib/python3.9/site-packages:$PYTHONPATH && python -m debugpy --listen 0.0.0.0:9229 -m gunicorn --workers=1 --threads=8 --limit-request-field_size=16380 --limit-request-line=8190 --worker-tmp-dir=/tmp/gunicorn --log-file=- --access-logfile=- -c gunicorn.conf.py -b 0.0.0.0:8000 -t 60 --worker-class=uvicorn.workers.UvicornWorker --reload run:app"
    workdir: /opt/app-root/src
    sync:
      - ${INSIGHTS_HOST_INVENTORY_REPO_PATH:-/Users/mmclaugh/go/src/github.com/RedHatInsights/insights-host-inventory}:/opt/app-root/src
    forward:
      - 8005:8000  # Export service port
      - 9005:9229  # Debug port
    environment:
      - LOG_LEVEL=DEBUG
      - SERVICE_TYPE=EXPORT
      - CLOWDER_ENABLED=true
      - PROMETHEUS_MULTIPROC_DIR=/tmp/inventory/prometheus
    volumes:
      - /var/run/secrets
    securityContext:
      runAsUser: ${OKTETO_USER_ID}
      runAsGroup: ${OKTETO_GROUP_ID}
      fsGroup: ${OKTETO_FS_GROUP_ID}
      runAsNonRoot: true