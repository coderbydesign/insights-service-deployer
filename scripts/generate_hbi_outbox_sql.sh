#!/bin/bash

# Script to generate SQL insert statements for hbi.outbox table
# Usage: ./generate_hbi_outbox_sql.sh <number_of_rows> [output_file]

set -e

# Default values
ROWS=${1:-10}
OUTPUT_FILE=${2:-"hbi_outbox_inserts.sql"}

# Embedded JSON template (minimized)
JSON_TEMPLATE='{"type":"host","reporter_type":"hbi","reporter_instance_id":"13235b49-3117-4e6c-a1d2-572567e57766","representations":{"metadata":{"local_resource_id":"{{host.id}}","api_href":"https://apiHref.com/","console_href":"https://www.console.com/","reporter_version":"2.7.16"},"common":{"workspace_id":"workspace-1234"},"reporter":{"satellite_id":"13235b49-3117-4e6c-a1d2-572567e57766","sub_manager_id":"13235b49-3117-4e6c-a1d2-572567e57766","insights_inventory_id":"13235b49-3117-4e6c-a1d2-572567e57766","ansible_host":"13235b49-3117-4e6c-a1d2-572567e57766"}}}'

# Check if required tools are available
if ! command -v uuidgen &> /dev/null; then
    echo "Error: uuidgen command not found. Please install it."
    exit 1
fi

if ! command -v jq &> /dev/null; then
    echo "Error: jq command not found. Please install it."
    exit 1
fi

echo "Generating $ROWS SQL insert statements..."
echo "Output file: $OUTPUT_FILE"

# Function to generate a UUID
generate_uuid() {
    uuidgen | tr '[:upper:]' '[:lower:]'
}

# /overwrite the output file with header
cat > "$OUTPUT_FILE" << 'EOF'
-- SQL insert statements for hbi.outbox table
-- Generated by generate_hbi_outbox_sql.sh
-- 
-- To load this file:
-- 1. Set up port forwarding to the host-inventory database
-- 2. Run: psql -h localhost -p <port> -U <username> -d <database> -f hbi_outbox_inserts.sql

BEGIN;

EOF

# Counter for progress
counter=0

# Loop to generate insert statements
for ((i=1; i<=ROWS; i++)); do
    # Generate UUIDs for this row
    ROW_ID=$(generate_uuid)
    AGGREGATE_ID=$(generate_uuid)
    
    # Generate the JSON payload by replacing {{host.id}} with the aggregateid
    PAYLOAD=$(echo "$JSON_TEMPLATE" | sed "s/{{host.id}}/$AGGREGATE_ID/g" | jq -c . | sed "s/'/''/g")
    
    # Generate SQL insert statement
    SQL="INSERT INTO hbi.outbox (id, aggregatetype, aggregateid, operation, payload) VALUES ('$ROW_ID', 'hbi.hosts', '$AGGREGATE_ID', 'created', '$PAYLOAD');"
    
    # Append to output file
    echo "$SQL" >> "$OUTPUT_FILE"
    
    ((counter++))
    echo "Generated insert statement $counter/$ROWS (aggregate_id: $AGGREGATE_ID)"
done

# Add commit statement
echo "" >> "$OUTPUT_FILE"
echo "COMMIT;" >> "$OUTPUT_FILE"

echo ""
echo "Successfully generated $counter SQL insert statements in $OUTPUT_FILE"
echo ""
echo "File size: $(du -h "$OUTPUT_FILE" | cut -f1)"
echo ""
echo "To load the data:"
echo "1. Set up port forwarding to the host-inventory database"
echo "2. Run: psql -h localhost -p <port> -U <username> -d <database> -f $OUTPUT_FILE"